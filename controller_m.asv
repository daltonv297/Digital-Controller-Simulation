%clear
clc
close all

Kp = 2.4;
Ki = 0.05;
Kd = 0.4;

tmax = 10; % s

T = 0.1; % sampling time, s

K_b = 1/4.6027; 
tau_m = 0.22;

s = tf('s');

G = 1/K_b / (s*(tau_m*s+1));


u = stepFun(1, 1, T, tmax); % commanded theta
e = zeros(1, length(u)); % feedback error (theta_c - theta)
p = zeros(1, length(u)); % proportional term
I = zeros(1, length(u)); % integral term
d = zeros(1, length(u)); % derivative term
c = zeros(1, length(u)); % controller output
w = zeros(1, length(u)); % omega
theta = zeros(1, length(u)); 

for i = 2:length(u) % starting from t(1) because t(0) is known
    e(i) = u(i) - theta(i-1);
    p(i) = kp*e(i);
    I(i) = ki*T/2 * (e(i) + e(i-1)) + I(i-1);
    d(i) = kd*w(i-1);
    c(i) = p(i) + I(i) - d(i);
    w(i) = (c(i) + c(i-1) - w(i-1)*(K_b - 2*K_b*tau_m/T))/(2*K_b*tau_m/T + K_b);
end

t = 0:T:tmax;

hold on
plot(t, w)
plot(out.tout, out.omega)
legend('matlab', 'simulink')

function u = stepFun(stepTime, stepVal, T, Tmax)
    u = zeros(1, round(Tmax/T)+1);
    u(round(stepTime/T)+1:end) = stepVal;
end